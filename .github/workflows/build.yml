name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.10'
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        for service in auth-service scraper-service analysis-service notification-service; do
          if [ -f services/$service/requirements.txt ]; then
            pip install -r services/$service/requirements.txt
          fi
        done
        
    - name: Run linting
      run: |
        for service in auth-service scraper-service analysis-service notification-service; do
          if [ -d services/$service/src ]; then
            echo "Linting $service"
            black --check services/$service/src
            isort --check-only services/$service/src
            flake8 services/$service/src
          fi
        done
        
    - name: Run tests
      run: |
        for service in auth-service scraper-service analysis-service notification-service; do
          if [ -d services/$service/tests ]; then
            echo "Testing $service"
            pytest services/$service/tests/ --cov=services/$service/src --cov-report=xml
          fi
        done
        
  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and push services
      run: |
        for service in auth-service scraper-service analysis-service notification-service; do
          echo "Building $service"
          docker build -t ghcr.io/${{ github.repository }}/$service:latest services/$service
          docker push ghcr.io/${{ github.repository }}/$service:latest
        done

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name jse-stock-platform-cluster --region ${{ secrets.AWS_REGION }}
        
    - name: Deploy to EKS
      run: |
        kubectl apply -f k8s/backend/
        kubectl apply -f k8s/frontend/webapp.yaml
        kubectl apply -f k8s/ingress.yaml